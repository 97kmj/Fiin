<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.campaign">

	<!--	// 상민 - campaignRegister (캠페인 등록하기) -->
	<insert id="registerCampaign" parameterType="campaign">
			<![CDATA[
		INSERT INTO campaign (
			company_name,
			company_url,
			campaign_title,
			product_name,
			update_start_date,
			update_end_date,
			channel,
			ad_start_date,
			ad_end_date,
			image,
			category_id,
			requirement,
			advertiser_num
		) VALUES (
							 #{companyName},
							 #{companyUrl},
							 #{campaignTitle},
							 #{productName},
							 #{updateStartDate},
							 #{updateEndDate},
							 #{channel},
							 #{adStartDate},
							 #{adEndDate},
							 #{image},
							 #{categoryId},
							 #{requirement},
							 #{advertiserNum}
						 )
		]]>
	</insert>



<!--	// 상민 - campaignUpdate (캠페인 수정하기) -->
	<update id="updateCampaign" parameterType="campaign">
		UPDATE campaign
		set
			company_name = #{companyName},
			company_url = #{companyUrl},
			campaign_title = #{campaignTitle},
			product_name = #{productName},
			update_start_date = #{updateStartDate},
			update_end_date = #{updateEndDate},
			channel = #{channel},
# 			ad_start_date = #{adStartDate},
# 			ad_end_date = #{adEndDate},
			image = #{image},
			category_id = #{categoryId},
			requirement = #{requirement},
		  advertiser_num = #{advertiserNum}

		WHERE campaign_num = #{campaignNum}
	</update>



	<!--준영-->
	<select id="selectCampaign" parameterType="Integer" resultType="campaign">											
		<![CDATA[
		 	select 
			 	campaign_num,
				advertiser_num,
				category_id,
				company_name,
				company_url,
				campaign_title,
				product_name,
				update_start_date,
				update_end_date,
				ad_start_date,
				ad_end_date,
				requirement,
			    replace(replace(replace(replace(LOWER(channel), '#', ' '), 'youtube', '유튜브'), 'instagram', '인스타그램'), 'blog', '블로그') as CHANNEL,
				image,
				is_recruit 
		 	from campaign where campaign_num = #{campaignNum}
		 	
		]]>
	</select>
	
	<select id="selectAllCampaign" parameterType="Map" resultType="campaign">
		select 
			campaign_num,
			advertiser_num,
			category_id,
			company_name,
			company_url,
			campaign_title,
			product_name,
			update_start_date,
			update_end_date,
			ad_start_date,
			ad_end_date,
			requirement,
			replace(replace(replace(replace(LOWER(channel), '#', ' '), 'youtube', '유튜브'), 'instagram', '인스타그램'), 'blog', '블로그') as CHANNEL,
			image,
			is_recruit
		 from campaign 
			<where>
				<if test="channel != null and channel.size()>0">
					<foreach collection="channel" item="item" separator="or" open="(" close=")">
					 	channel like CONCAT('%', #{item},'%')
					 </foreach>
				</if>
				<if test="categoryId != 0">
					 and category_id=#{categoryId}
				</if>
			</where> 
		order by update_start_date desc limit #{row}, 8
	</select>
	
	<select id="selectCampaignCount" parameterType="Map" resultType="integer">
		select Count(*) from campaign
		<where>
			<if test="channel != null and channel.size()>0">
				<foreach collection="channel" item="item" separator="or" open="(" close=")">
					channel like CONCAT('%', #{item},'%')
				</foreach>
			</if>
			<if test="categoryId != 0">
				and category_id=#{categoryId}
			</if>
		</where>
	</select>
	
	<update id="CampaignIsRecruit" parameterType="map">
		<![CDATA[
			update campaign set is_recruit = #{status} where campaign_num =#{campaignNum}
		]]>
	</update>
	
	<select id="selectCampaignReceive" parameterType="Integer" resultType="Map">
		<![CDATA[
			SELECT cam.*,rec.accept FROM campaign cam LEFT JOIN receive_campaign rec ON cam.campaign_num = rec.campaign_num
			WHERE rec.influencer_num = #{influencerNum}
		]]>
	</select>
	<select id="selectCampaignRequest" parameterType="Integer" resultType="Map">
		<![CDATA[
			SELECT cam.*,req.accept,req.request_num FROM campaign cam LEFT JOIN request_campaign req ON cam.campaign_num = req.campaign_num
			WHERE req.influencer_num = #{influencerNum}
		]]>
	</select>
	
	<!--세나-->
	<select id="selectCampaignListForMain" resultType="campaign">
		<![CDATA[
			select * from campaign order by update_start_date desc limit 0, 8
		]]>
	</select>

	
	
	<!--민준-->
	<select id="selectCampaignByAdNum" parameterType="integer" resultType="campaign">
		select * from campaign where advertiser_num = #{advertiserNum} order by update_start_date desc 
	</select>
	
		<!-- 세원 -->
	<select id="selectCampaignForRequest" parameterType="integer" resultType="Map">
		select company_name, campaign_title, product_name, ad_end_date, campaign_num  
		from campaign where advertiser_num = #{advertiser_num}
		order by update_start_date desc 		
	</select>
	
	<select id="selectCampaignForBookmark" parameterType="Integer" resultType="Map">
		select c.*,g.category_name from campaign c 
		join bookmark_campaign b using(campaign_num)
		join category g using(category_id)
		where influencer_num = #{influencerNum}
	</select>
	
</mapper>	



