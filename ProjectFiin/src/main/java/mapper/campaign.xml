<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--// Mapper: dto와 sql문 이어주는 역할 -->
<!--	# // campaign ( ) 부분은 db와 매핑 되는 값-->
<!--	# // value (#{}...) 부분은 dto와 매핑되는 값-->

<mapper namespace="mapper.campaign">

	<!--// 상민 - campaignRegister (캠페인 등록하기) -->
	<update id="registerCampaign" parameterType="campaign">
		UPDATE campaign
		set
			company_name = #{companyName},
			company_url = #{companyUrl},
			campaign_title = #{campaignTitle},
			product_name = #{productName},
			update_start_date = #{updateStartDate},
			update_end_date = #{updateEndDate},
			channel = #{channel},
			ad_start_date = #{adStartDate},
			ad_end_date = #{adEndDate},
			image = #{image},
			category_id = #{categoryId},
			requirement = #{requirement}

		WHERE advertiser_num = #{advertiserNum}
	</update>

<!--	상민 - updateCampaign (캠페인 수정하기) updateStart,End Date제외 -->
	<update id="updateCampaignInfo" parameterType="campaign">
		UPDATE campaign
		set
			company_name = #{companyName},
			company_url = #{companyUrl},
			campaign_title = #{campaignTitle},
			product_name = #{productName},
			channel = #{channel},
			ad_start_date = #{adStartDate},
			ad_end_date = #{adEndDate},
			image = #{image},
			category_id = #{categoryId},
			requirement = #{requirement}

		WHERE advertiser_num = #{advertiserNum}
	</update>

	<!--상민 - 캠페인 등록 시, 포인트 차감 -->
	<update id="usePointsByCampaign" parameterType="map">
		UPDATE point_record
		SET
			change_point = change_point - #{usedPoint},
			detail = '광고주 등록',
			update_at = NOW()
		WHERE advertiser_num = #{advertiserNum}
	</update>





	<!--준영-->
	<select id="selectCampaign" parameterType="Integer" resultType="campaign">											
		<![CDATA[
		 	select * from campaign where campaign_num = #{campaignNum}
		 	
		]]>
	</select>
	
	<select id="selectAllCampaign" parameterType="Map" resultType="campaign">
		select * from campaign 
			<where>
				<if test="channel != null and channel.size()>0">
					<foreach collection="channel" item="item" separator="or" open="(" close=")">
					 	channel like CONCAT('%', #{item},'%')
					 </foreach>
				</if>
				<if test="categoryId != 0">
					 and category_id=#{categoryId}
				</if>
			</where> 
		order by update_start_date desc limit #{row}, 8
	</select>
	
	<select id="selectCampaignCount" parameterType="Map" resultType="integer">
		select Count(*) from Campaign
		<where>
			<if test="channel != null and channel.size()>0">
				<foreach collection="channel" item="item" separator="or" open="(" close=")">
					channel like CONCAT('%', #{item},'%')
				</foreach>
			</if>
			<if test="categoryId != 0">
				and category_id=#{categoryId}
			</if>
		</where>
	</select>
	
	<update id="CampaignIsRecruit" parameterType="map">
		<![CDATA[
			update campaign set is_recruit = #{status} where campaign_num =#{campaignNum}
		]]>
	</update>
	
	<select id="selectCampaignReceive" parameterType="Integer" resultType="Map">
		<![CDATA[
			SELECT cam.*,rec.accept FROM campaign cam LEFT JOIN receive_campaign rec ON cam.campaign_num = rec.campaign_num
			WHERE rec.influencer_num = #{influencerNum}
		]]>
	</select>

	
	<!--세나-->
	<select id="selectCampaignListForMain" resultType="campaign">
		<![CDATA[
			select * from campaign order by update_start_date desc limit 0, 8
		]]>
	</select>

	
	
	<!--민준-->
	<select id="selectCampaignByAdNum" parameterType="integer" resultType="campaign">
		select * from campaign where advertiser_num = #{advertiserNum} order by update_start_date desc 
	</select>
</mapper>	

