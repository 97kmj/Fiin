<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.influencer">

	<!--// 상민 - influencerRegister (인플루언서 등록하기) -->
	<update id="registerInfluencerInfo" parameterType="influencer">
		UPDATE influencer
		set
		intro_line = #{introLine},
		profile_image =
		#{profileImage},
		youtube = #{youtube},
		youtube_name = #{youtubeName},
		youtube_follower = #{youtubeFollower},
		youtube_url = #{youtubeUrl},
		instagram = #{instagram},
		instagram_name = #{instagramName},
		instagram_follower = #{instagramFollower},
		instagram_url =
		#{instagramUrl},
		blog = #{blog},
		blog_name = #{blogName},
		blog_follower =
		#{blogFollower},
		blog_url = #{blogUrl},
		category_id = #{categoryId},
		introduction = #{introduction},
		regist_date = #{registDate},
		is_regist = #{isRegist}

		WHERE influencer_num = #{influencerNum}
	</update>

	<!--// 상민 - updateRegister (인플루언서 수정하기) -->
	<update id="updateInfluencerInfo" parameterType="influencer">
		UPDATE influencer
		set
			intro_line = #{introLine},
			profile_image =
				#{profileImage},
			youtube = #{youtube},
			youtube_name = #{youtubeName},
			youtube_follower = #{youtubeFollower},
			youtube_url = #{youtubeUrl},
			instagram = #{instagram},
			instagram_name = #{instagramName},
			instagram_follower = #{instagramFollower},
			instagram_url =
				#{instagramUrl},
			blog = #{blog},
			blog_name = #{blogName},
			blog_follower =
				#{blogFollower},
			blog_url = #{blogUrl},
			category_id = #{categoryId},
			introduction = #{introduction}

		WHERE influencer_num = #{influencerNum}
	</update>

<!--상민 - 인플루언서 등록 시, 포인트 차감 -->
	<update id="usePointsByInfluencer" parameterType="map">
		UPDATE point_record
		SET
		change_point = change_point - #{usedPoint},
		detail = '인플루언서 등록',
		update_at = NOW()
		WHERE influencer_num = #{influencerNum}
	</update>


	<!--세원 -->
	<select id="selectInfluencerList" parameterType="Integer"
		resultType="influencer">
		<![CDATA[
		    select *
		    from influencer
		    order by regist_date desc
		    limit #{row}, 8
	    	]]>
	</select>

	<select id="selectInfluencerCount" resultType="Integer">
		<![CDATA[
    		select count(*) from influencer
    	]]>
	</select>

	<select id="selectAllInfluencerCount" resultType="Integer">
		select count(*) from influencer
		<where>
			1=1
			<if test="channels != null and channels.size() > 0">
				and
				<foreach item="channel" collection="channels" open="("
					separator="or" close=")">
					${channel}= 1
				</foreach>
			</if>
			<if test="categoryId != 0">
				and category_id = #{categoryId}
			</if>
			and
			(youtube_name like '%${keyword}%' or instagram_name like '%${keyword}%' or
			blog_name like '%${keyword}%')
		</where>

	</select>

	<select id="selectAllInfluencer" parameterType="Map"
		resultType="Map">
		select i.*,c.category_name from influencer i join category c
		using(category_id)
		<where>
			1=1
			<choose>
				<when test="channels != null and channels.size > 0">
					and
					<foreach item="channel" collection="channels" open="("
						separator="or" close=")">
						${channel}= 1
					</foreach>
				</when>

				<otherwise>
					and is_regist = 1
				</otherwise>
			</choose>
			<if test="categoryId != 0">
				and category_id = #{categoryId}
			</if>
			and
			(youtube_name like '%${keyword}%' or instagram_name like '%${keyword}%' or
			blog_name like '%${keyword}%')
		</where>
		order by regist_date DESC limit #{row}, 8

	</select>

	<!--세나 -->
	<select id="selectInfluencer" parameterType="Integer"
		resultType="influencer">
		<![CDATA[
		    select *
		    from influencer
		    where influencer_num = #{influencerNum}
	    	]]>
	</select>

	<select id="selectInfluencerByEmail" parameterType="String"
		resultType="influencer">
		<![CDATA[
			select *
	    		from influencer
	    		where user_email = #{userEmail}
	    	]]>
	</select>

	<update id="updateInfluencer" parameterType="influencer">
		update influencer
		<set>
			<if test="password != null">password = #{password},</if>
			<if test="name != null">name = #{name},</if>
			<if test="nickname != null">nickname = #{nickname},</if>
			<if test="mobileNumber != null">mobile_number = #{mobileNumber},</if>
			<if test="address != null">address = #{address},</if>
			<if test="addressDetail != null">address_detail = #{addressDetail}</if>
		</set>
		where influencer_num = #{influencerNum}
	</update>

	<select id="selectInfluencerListForMain" resultType="influencer">
		<![CDATA[
			select * from influencer where regist_date IS NOT NULL order by regist_date desc limit 0, 8
		]]>
	</select>

	<select id="selectInfluencerForFindEmail" parameterType="map"
		resultType="String">
		<![CDATA[
			select user_email from influencer where name = #{name} and mobile_number = #{mobileNumber}
		]]>
	</select>
	<insert id="insertInfluencer" parameterType="influencer">
		<![CDATA[
			insert into influencer (user_email, password, name, nickname, mobile_number, address, address_detail) 
				values (#{userEmail}, #{password}, #{name}, #{nickname}, #{mobileNumber}, #{address}, #{addressDetail})
		]]>
	</insert>

	<select id="selectInfluencerForFindPassword"
		parameterType="String" resultType="String">
		<![CDATA[
			select insert(password, 4, 5, '*****') from influencer where user_email = #{userEmail}
		]]>
	</select>
	
	
	
	<!-- 민준 -->
	<select id="selectEmaliListByCampaign" parameterType="Map" resultType="String">
		select user_email from influencer 
		where category_id = #{categoryId} and   
		<foreach item="channel" collection="channelList" open="(" separator="or" close=")">
			${channel} = 1
		</foreach>
		limit 0,50
	</select>
</mapper>

